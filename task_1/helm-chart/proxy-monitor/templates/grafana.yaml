{{- if .Values.grafana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Values.namespace.name }}
  labels:
    app: grafana
    version: {{ .Values.grafana.image.tag }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        version: {{ .Values.grafana.image.tag }}
    spec:
      serviceAccountName: {{ .Values.rbac.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.grafana.securityContext | nindent 8 }}
      containers:
      - name: grafana
        image: {{ .Values.grafana.image.registry }}/{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}
        ports:
        - containerPort: 3000
          name: http-grafana
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: {{ .Values.grafana.admin.username }}
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel"
        resources:
          {{- toYaml .Values.grafana.resources | nindent 10 }}
        volumeMounts:
        - name: grafana-pv
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards/default
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 30
      volumes:
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          defaultMode: 420
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          defaultMode: 420
          name: grafana-dashboards-config
      - name: grafana-dashboards
        configMap:
          defaultMode: 420
          name: grafana-dashboards
      {{- with .Values.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: {{ .Values.namespace.name }}
  labels:
    app: grafana
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
  - port: {{ .Values.grafana.service.port }}
    targetPort: 3000
    protocol: TCP
    name: http-grafana
  selector:
    app: grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: {{ .Values.namespace.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.grafana.persistence.size }}
  {{- if .Values.grafana.persistence.storageClass }}
  storageClassName: {{ .Values.grafana.persistence.storageClass }}
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-credentials
  namespace: {{ .Values.namespace.name }}
type: Opaque
data:
  admin-password: {{ .Values.grafana.admin.password | b64enc }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: {{ .Values.namespace.name }}
data:
  datasources.yaml: |
    {{- toYaml .Values.grafana.datasources | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: {{ .Values.namespace.name }}
data:
  dashboardproviders.yaml: |
    {{- toYaml .Values.grafana.dashboardProviders | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: {{ .Values.namespace.name }}
data:
  proxy-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Proxy Monitoring Overview",
        "tags": ["proxy", "monitoring"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Requests per Second by Vendor",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(istio_requests_total{source_app='crawler'}[5m])) by (proxy_vendor)",
                "legendFormat": "{{ proxy_vendor }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "reqps"
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Response Status Codes",
            "type": "piechart",
            "targets": [
              {
                "expr": "sum(rate(istio_requests_total{source_app='crawler'}[5m])) by (response_code)",
                "legendFormat": "{{ response_code }}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Request Duration P95 by Vendor",
            "type": "timeseries",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(istio_request_duration_milliseconds_bucket{source_app='crawler'}[5m])) by (proxy_vendor, le))",
                "legendFormat": "{{ proxy_vendor }}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "ms"
              }
            },
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }
{{- end }}