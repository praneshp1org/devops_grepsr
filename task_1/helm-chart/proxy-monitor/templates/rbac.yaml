{{- if .Values.rbac.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.rbac.serviceAccount.name }}
  namespace: {{ .Values.namespace.name }}
  {{- if .Values.rbac.serviceAccount.annotations }}
  annotations:
    {{- toYaml .Values.rbac.serviceAccount.annotations | nindent 4 }}
  {{- end }}
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.rbac.serviceAccount.name }}
rules:
{{- range .Values.rbac.clusterRole.rules }}
- apiGroups: {{ .apiGroups | toJson }}
  resources: {{ .resources | toJson }}
  verbs: {{ .verbs | toJson }}
{{- end }}
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["nodes/proxy"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes/metrics"]
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.rbac.serviceAccount.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.rbac.serviceAccount.name }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.rbac.serviceAccount.name }}
  namespace: {{ .Values.namespace.name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: {{ .Values.namespace.name }}
  name: {{ .Values.rbac.serviceAccount.name }}-namespace-reader
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["deployments", "daemonsets", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Values.rbac.serviceAccount.name }}-namespace-reader
  namespace: {{ .Values.namespace.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.rbac.serviceAccount.name }}-namespace-reader
subjects:
- kind: ServiceAccount
  name: {{ .Values.rbac.serviceAccount.name }}
  namespace: {{ .Values.namespace.name }}
---
# Security Context Constraints for OpenShift compatibility
{{- if .Capabilities.APIVersions.Has "security.openshift.io/v1" }}
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: {{ .Values.rbac.serviceAccount.name }}-scc
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowedCapabilities: []
defaultAddCapabilities: []
fsGroup:
  type: MustRunAs
  ranges:
    - min: 65534
      max: 65534
readOnlyRootFilesystem: false
requiredDropCapabilities:
- ALL
runAsUser:
  type: MustRunAsNonRoot
seLinuxContext:
  type: MustRunAs
users:
- system:serviceaccount:{{ .Values.namespace.name }}:{{ .Values.rbac.serviceAccount.name }}
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
{{- end }}
{{- end }}